<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bookmanager.bookemplog.mapper.LogBookEmpMapper">
  <resultMap id="BaseResultMap" type="com.bookmanager.setting.model.LogBookEmp">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="lend_time" jdbcType="TIMESTAMP" property="lendTime" />
    <result column="return_time" jdbcType="TIMESTAMP" property="returnTime" />
    <result column="book_isbn" jdbcType="BIGINT" property="bookIsbn" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, lend_time, return_time, book_isbn
  </sql>
  <select id="selectByExample" parameterType="com.bookmanager.setting.model.LogBookEmpExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from log_book_emp
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from log_book_emp
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from log_book_emp
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.bookmanager.setting.model.LogBookEmpExample">
    delete from log_book_emp
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.bookmanager.setting.model.LogBookEmp">
    insert into log_book_emp (id, lend_time, return_time, 
      book_isbn)
    values (#{id,jdbcType=INTEGER}, #{lendTime,jdbcType=TIMESTAMP}, #{returnTime,jdbcType=TIMESTAMP}, 
      #{bookIsbn,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.bookmanager.setting.model.LogBookEmp">
    insert into log_book_emp
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="lendTime != null">
        lend_time,
      </if>
      <if test="returnTime != null">
        return_time,
      </if>
      <if test="bookIsbn != null">
        book_isbn,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="lendTime != null">
        #{lendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="returnTime != null">
        #{returnTime,jdbcType=TIMESTAMP},
      </if>
      <if test="bookIsbn != null">
        #{bookIsbn,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.bookmanager.setting.model.LogBookEmpExample" resultType="java.lang.Long">
    select count(*) from log_book_emp
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update log_book_emp
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.lendTime != null">
        lend_time = #{record.lendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.returnTime != null">
        return_time = #{record.returnTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.bookIsbn != null">
        book_isbn = #{record.bookIsbn,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update log_book_emp
    set id = #{record.id,jdbcType=INTEGER},
      lend_time = #{record.lendTime,jdbcType=TIMESTAMP},
      return_time = #{record.returnTime,jdbcType=TIMESTAMP},
      book_isbn = #{record.bookIsbn,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.bookmanager.setting.model.LogBookEmp">
    update log_book_emp
    <set>
      <if test="lendTime != null">
        lend_time = #{lendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="returnTime != null">
        return_time = #{returnTime,jdbcType=TIMESTAMP},
      </if>
      <if test="bookIsbn != null">
        book_isbn = #{bookIsbn,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bookmanager.setting.model.LogBookEmp">
    update log_book_emp
    set lend_time = #{lendTime,jdbcType=TIMESTAMP},
      return_time = #{returnTime,jdbcType=TIMESTAMP},
      book_isbn = #{bookIsbn,jdbcType=BIGINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>