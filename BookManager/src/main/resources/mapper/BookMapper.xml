<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bookmanager.book.mapper.BookMapper">
  <resultMap id="BaseResultMap" type="com.bookmanager.setting.model.Book">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="isbn" jdbcType="BIGINT" property="isbn" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="author" jdbcType="VARCHAR" property="author" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="emp_number" jdbcType="BIGINT" property="empNumber" />
    <result column="status" jdbcType="BIT" property="status" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.bookmanager.setting.model.Book">
    <result column="synopsis" jdbcType="LONGVARCHAR" property="synopsis" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, isbn, name, author, type, emp_number, status,synopsis
  </sql>
  <sql id="Blob_Column_List">
    synopsis
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.bookmanager.setting.model.BookExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from book
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.bookmanager.setting.model.BookExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from book
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultType="com.bookmanager.setting.model.Book">
    select * from book where id = #{id}
  </select>

<select id="findAllBook" resultType="com.bookmanager.setting.model.Book">
  select
  <include refid="Base_Column_List"/>
  from book
</select>
  <select id="getBookIsbn" resultType="com.bookmanager.setting.model.Book">
    select
    <include refid="Base_Column_List"/>
    from book where isbn = #{isbn}
  </select>
<select id="findAllBookIsbn" resultType="com.bookmanager.setting.model.Book">
  select isbn from book
</select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from book
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.bookmanager.setting.model.BookExample">
    delete from book
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>

  <delete id="deleteBookByIsbn" parameterType="long">
    DELETE FROM book WHERE isbn=#{isbn}
  </delete>

  <insert id="insertBook" parameterType="com.bookmanager.setting.model.Book">
    insert into book (isbn, name,
      author, type, emp_number, 
      status, synopsis)
    values (#{isbn,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR},
      #{author,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, #{empNumber,jdbcType=BIGINT}, 
      #{status,jdbcType=BIT}, #{synopsis,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.bookmanager.setting.model.Book">
    insert into book
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="isbn != null">
        isbn,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="author != null">
        author,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="empNumber != null">
        emp_number,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="synopsis != null">
        synopsis,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="isbn != null">
        #{isbn,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="author != null">
        #{author,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="empNumber != null">
        #{empNumber,jdbcType=BIGINT},
      </if>
      <if test="status != null">
        #{status,jdbcType=BIT},
      </if>
      <if test="synopsis != null">
        #{synopsis,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>

<<<<<<< HEAD
  <insert id="addBook" parameterType="com.bookmanager.setting.model.Book">
    insert into book (id,isbn,name,author,type,emp_number,static,sysnopsis) values(#{id},#{isbn},#{name},#{author},#{type},#{empNumber},#{static},#{sysnopsis})
  </insert>

=======
>>>>>>> origin/master
  <select id="countByExample" parameterType="com.bookmanager.setting.model.BookExample" resultType="java.lang.Long">
    select count(*) from book
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <select id="findBookByIsbn" resultType="com.bookmanager.setting.model.Book">
    select
    <include refid="Base_Column_List"/>
    from book
    where isbn = #{isbn}
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update book
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.isbn != null">
        isbn = #{record.isbn,jdbcType=BIGINT},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.author != null">
        author = #{record.author,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.empNumber != null">
        emp_number = #{record.empNumber,jdbcType=BIGINT},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=BIT},
      </if>
      <if test="record.synopsis != null">
        synopsis = #{record.synopsis,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update book
    set id = #{record.id,jdbcType=BIGINT},
      isbn = #{record.isbn,jdbcType=BIGINT},
      name = #{record.name,jdbcType=VARCHAR},
      author = #{record.author,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=VARCHAR},
      emp_number = #{record.empNumber,jdbcType=BIGINT},
      status = #{record.status,jdbcType=BIT},
      synopsis = #{record.synopsis,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update book
    set id = #{record.id,jdbcType=BIGINT},
      isbn = #{record.isbn,jdbcType=BIGINT},
      name = #{record.name,jdbcType=VARCHAR},
      author = #{record.author,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=VARCHAR},
      emp_number = #{record.empNumber,jdbcType=BIGINT},
      status = #{record.status,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.bookmanager.setting.model.Book">
    update book
    <set>
      <if test="isbn != null">
        isbn = #{isbn,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="author != null">
        author = #{author,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="empNumber != null">
        emp_number = #{empNumber,jdbcType=BIGINT},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=BIT},
      </if>
      <if test="synopsis != null">
        synopsis = #{synopsis,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.bookmanager.setting.model.Book">
    update book
    set isbn = #{isbn,jdbcType=BIGINT},
      name = #{name,jdbcType=VARCHAR},
      author = #{author,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      emp_number = #{empNumber,jdbcType=BIGINT},
      status = #{status,jdbcType=BIT},
      synopsis = #{synopsis,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bookmanager.setting.model.Book">
    update book
    set isbn = #{isbn,jdbcType=BIGINT},
      name = #{name,jdbcType=VARCHAR},
      author = #{author,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      emp_number = #{empNumber,jdbcType=BIGINT},
      status = #{status,jdbcType=BIT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>